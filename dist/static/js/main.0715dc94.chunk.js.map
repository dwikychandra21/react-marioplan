{"version":3,"sources":["components/Layout/SignedInLinks.js","store/actions/auth.js","components/Layout/SignedOutLinks.js","components/Layout/Navbar.js","components/Projects/ProjectSummary.js","components/Projects/ProjectLists.js","components/Dashboard/Notifications.js","components/Dashboard/Dashboard.js","components/Projects/ProjectDetail.js","components/Auth/Login.js","components/Auth/SignUp.js","components/Projects/CreateProject.js","store/actions/project.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","onLogout","firebase","auth","signOut","then","type","logout","props","useFirebase","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","signedOutLinks","state","links","isLoaded","uid","Layout_SignedInLinks","SignedOutLinks","projectSummary","project","title","authorName","moment","createdAt","toDate","calendar","projectLists","projects","map","concat","id","key","ProjectSummary","notifications","item","user","content","time","fromNow","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","react_router","ProjectLists","Notifications","ownProps","match","params","data","onLogin","credentials","signInWithEmailAndPassword","email","password","res","catch","err","login","_useState","useState","_useState2","Object","slicedToArray","formData","setFormData","handleChange","e","objectSpread","defineProperty","target","value","signInContent","onSubmit","preventDefault","htmlFor","onChange","onSignUp","createUserWithEmailAndPassword","arrayName","name","split","doc","set","signup","useFirestore","signUpContent","onCreateProject","getState","authorId","add","authorID","Date","createProject","history","push","App","Navbar","path","exact","component","Dashboard","ProjectDetail","Login","SignUp","CreateProject","Boolean","window","location","hostname","initialState","errorAuth","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","rrfProps","fbConfig","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","es","react_redux_firebase_es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0715dc94.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logout } from \"../../store/actions/auth\";\r\n\r\nconst SignedInLinks = props => {\r\n    const firebase = useFirebase();\r\n\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">Create Project</NavLink></li>\r\n            <li><a onClick={() => props.onLogout(firebase)}>Logout</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: (firebase) => dispatch(logout(firebase))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const login = (firebase, credentials) => {\r\n    return (dispatch) => {\r\n        console.log(firebase);\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then((res) => {\r\n            dispatch({ type: 'LOGIN_SUCCESS', res });\r\n        }).catch(err => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = (firebase) => {\r\n    return dispatch => {\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'LOGOUT_SUCCESS' });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signup = (firebase, firestore, formData) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            formData.email,\r\n            formData.password\r\n        ).then(res => {   \r\n            const arrayName = formData.name.split(' ');        \r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                name: formData.name,\r\n                initials: arrayName[0][0] + arrayName[1][0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_FAILED', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst signedOutLinks = props => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/login\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default signedOutLinks;","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst navbar = props => {\r\n  const { auth, profile } = props;\r\n  const { isLoaded } = auth;\r\n\r\n  let links = null;\r\n\r\n  if (isLoaded) {\r\n    if (auth.uid) {\r\n      links = <SignedInLinks profile={profile} />;\r\n    } else {\r\n      links = <SignedOutLinks />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst projectSummary = props => {  \r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{props.project.title}</span>\r\n        <p>Posted by {props.project.authorName}</p>\r\n        <p className=\"grey-text\">{moment(props.project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default projectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst projectLists = props => {\r\n  return (\r\n    <div className=\"project-list container\">\r\n      {\r\n        props.projects ? props.projects.map(project => {\r\n          return (\r\n            <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n            </Link>\r\n          )\r\n        }) : <p>Loading...</p>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default projectLists;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default notifications;\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport ProjectList from \"../Projects/ProjectLists\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nconst Dashboard = props => { \r\n    const { auth, notifications } = props;\r\n\r\n    if(!auth.uid && auth.isLoaded) return <Redirect to=\"/login\" />;\r\n    \r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={props.projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: ['createdAt', 'desc'] },\r\n    { collection: \"notifications\", limit: 5, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport moment from \"moment\";\r\n\r\nconst projectDetail = props => {\r\n    const { project } = props;\r\n\r\n    if(project) {\r\n        return (\r\n            <div className=\"container project-detail\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <p>Posted by {project.authorName}</p>\r\n                        <p>{moment(props.project.createdAt.toDate()).calendar()}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"materialize center\">\r\n                Loading...\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps)=> {   \r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(projectDetail);","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { login } from \"../../store/actions/auth\";\r\n\r\nconst Login = props => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const firebase = useFirebase();\r\n\r\n  const handleChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.onLogin(firebase, formData);\r\n  };\r\n\r\n  const { auth } = props;\r\n  const { isLoaded } = auth;\r\n  let signInContent = null;\r\n  \r\n  if (isLoaded) {\r\n    if (auth.uid) {\r\n      signInContent = <Redirect to=\"/\" />;\r\n    } else {\r\n      signInContent = (\r\n        <form className=\"white\" onSubmit={handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Login</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"text\" id=\"email\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" >\r\n        {signInContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogin: (firebase, credentials) => dispatch(login(firebase, credentials))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useFirebase, useFirestore } from \"react-redux-firebase\";\r\n\r\nimport { signup } from \"../../store/actions/auth\";\r\n\r\nconst Login = props => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const firebase = useFirebase();\r\n  const firestore = useFirestore();\r\n\r\n  const handleChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.onSignUp(firebase, firestore, formData);\r\n  };\r\n\r\n  const { auth } = props;\r\n  const { isLoaded } = auth;\r\n  let signUpContent = null;\r\n\r\n  if (isLoaded) {\r\n    if (auth.uid) {\r\n        signUpContent = <Redirect to=\"/\" />;\r\n    } else {\r\n        signUpContent = (\r\n        <form className=\"white\" onSubmit={handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input type=\"text\" id=\"name\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"text\" id=\"email\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n        </form>\r\n        )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        {signUpContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSignUp: (firebase, firestore, formData) => dispatch(signup(firebase, firestore, formData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { createProject } from \"../../store/actions/project\";\r\n\r\nconst CreateProject = props => {\r\n  const [formData, setFormData] = useState({ title: \"\", content: \"\" });\r\n  const firestore = useFirestore();\r\n  const {auth} = props;\r\n\r\n  if(!auth.uid && auth.isLoaded) return <Redirect to=\"/login\" />;\r\n\r\n  const handleChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.onCreateProject(firestore, formData);\r\n    props.history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"white\" onSubmit={handleSubmit}>\r\n        <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input type=\"text\" id=\"title\" onChange={handleChange} />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">Project Content</label>\r\n          <textarea\r\n            id=\"content\"\r\n            className=\"materialize-textarea\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Post</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCreateProject: (firestore, formData) =>\r\n      dispatch(createProject(firestore, formData))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = (firestore, project) => {\r\n  return (dispatch, getState) => {  \r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore.collection('projects').add({\r\n        ...project,\r\n        authorName: profile.name ,\r\n        authorID: authorId,\r\n        createdAt: new Date()\r\n    }).then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project })\r\n    }).catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_FAIL', err })\r\n    })\r\n  };\r\n};\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from \"./components/Layout/Navbar\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport ProjectDetail from \"./components/Projects/ProjectDetail\";\nimport Login from \"./components/Auth/Login\";\nimport SignUp from \"./components/Auth/SignUp\";\nimport CreateProject from \"./components/Projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetail} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  errorAuth: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login Success\", action.res);\r\n      return {\r\n        ...state,\r\n        errorAuth: null\r\n      };\r\n    case \"LOGIN_FAILED\":\r\n      console.log(action.err);\r\n      return {\r\n        ...state,\r\n        errorAuth: \"Login Failed\"\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      console.log('logout success');\r\n      return state\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initialState = {};\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n        console.log(action.project);\r\n       return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBzJrSAv7zOy3Mp5kMZ6iYhw40QeRO3bac\",\r\n    authDomain: \"react-marioplan-77fd3.firebaseapp.com\",\r\n    databaseURL: \"https://react-marioplan-77fd3.firebaseio.com\",\r\n    projectId: \"react-marioplan-77fd3\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"493651433399\",\r\n    appId: \"1:493651433399:web:c69f7aea55ec1cfa\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance} from \"redux-firestore\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nconst rrfProps = {\n  firebase: fbConfig,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n    <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}